{
  "name": "sp-logger",
  "version": "0.0.4",
  "scripts": {
    "start": "node app"
  },
  "dependencies": {
    "logtofile": "0.1.4"
  },
  "devDependencies": {
    "should": "*",
    "mocha": "*"
  },
  "description": "Combines \"coloured\" and \"log.js\" for super simple pretty logging.",
  "main": "logger.js",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Flipkart/sp-logger.git"
  },
  "author": {
    "name": "Neeraj Singh"
  },
  "license": "BSD",
  "readme": "**It is a wrapper around logToFile logger, which provides dfferent logs levels, rotation, compression and colored logs\non console.**\n\nTo install sp-logger, use [npm]:\n\n```bash\n$ npm install sp-logger\n```\n\nBelow is the list of other configurable options.\n\n\n   var options = {\n   enable: [\"error\", \"warn\", \"info\", \"debug\", \"stdout\", \"stderr\"],\n   fileName: \"node.log\",\n   directory: \"../log\",\n   writeDelay: 200,\n   bufferSize: 4096,\n   fileMaxSize: 1024 * 1024 * 10,\n   maxBackupFileNumber: 10,\n   gzipBackupFile: false,\n   compressionLevel: 3,\n   verbose: true\n  \n## Example\n\n```javascript\n \nvar log = require(\"sp-logger\");\n\nMinimum options required to use it are enable, directory and fileName;\nvar logger = log.create({\n    enable: [\"error\", \"warn\", \"info\", \"debug\", \"stdout\", \"stderr\"],\n    directory:\"./\", fileName:\"node_test.log\"\n});\n```\n\n\nError and stream (stdout, stderr) logging\n\nOutputs \"Wed Aug 29 2012 16:15:56 GMT+0530 (IST)  ERROR:  This goes out to error.log\n```javascript\n    logger.error(\"This goes out to error.log\");\n```\nOutputs \"Wed Aug 29 2012 16:15:56 GMT+0530 (IST)   ERROR: This goes out to stderr\"\n```javascript\n    logger.stderr(\"This goes out to stderr\");\n```\n\nOutputs \"Wed Aug 29 2012 16:15:56 GMT+0530 (IST)  OUT:  This goes out to stdout\"\n```javascript\n    logger.stdout(\"This goes out to stdout\");\n```\n\nYou could do chaining as well, though it may not be needed.\n```javascript\nlogger\n    .warn(\"This goes out to warn.log\") \n    .info(\"This goes out to info.log\")\n    .debug(\"This goes out to debug.log\") \n```\n\nEnabling/disabling logger types.\n```javascript\nlogger\n    .disable(\"error\")\n    .error(\"This goes out to error.log\") // No output\n    .enable(\"error\")\n    .error(\"This goes out to error.log\"); // Outputs \"ERROR: This goes out to error.log\"\n```\nIdeal way to use in application and make is available to all js files.\n```javascript\nconsole.logger = logger;\n```\nThen use anywhere in you app as below.\n\n```javascript\nconsole.logger.error(\"This goes out to error.log\");\nconsole.logger.warn(\"This goes out to warn.log\");\nconsole.logger.disable(\"error\");\n```\n\n\n\n\n",
  "_id": "sp-logger@0.0.4",
  "dist": {
    "shasum": "1cb62e83a01fba7e1817a0c64d95f0a5d7c409b7",
    "tarball": "http://registry.npmjs.org/sp-logger/-/sp-logger-0.0.4.tgz"
  },
  "_npmVersion": "1.1.59",
  "_npmUser": {
    "name": "onoff50",
    "email": "neerajsi@flipkart.com"
  },
  "maintainers": [
    {
      "name": "onoff50",
      "email": "neerajsi@flipkart.com"
    }
  ],
  "_shasum": "1cb62e83a01fba7e1817a0c64d95f0a5d7c409b7",
  "_from": "sp-logger@0.0.4",
  "_resolved": "https://registry.npmjs.org/sp-logger/-/sp-logger-0.0.4.tgz"
}
